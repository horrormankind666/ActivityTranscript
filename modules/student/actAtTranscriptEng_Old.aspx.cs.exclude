using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.UI;
using System.Web.UI.WebControls;
using iTextSharp.text;
using iTextSharp.text.pdf;
using System.IO;
using iTextSharp.text.pdf.draw;
using System.Data;
using System.Text;

public partial class modules_student_actAtTranscript : System.Web.UI.Page
{

    int _yStartPosBody = 532; // 562 600
    int _feedLineBig = 19;
    int _ylinePos = 542; // 610 542
    int _yStartPos = 660; // 690 728
    int _xCenterPos = 290; // 302
    int _feedLineBiggest = 26;
    int _feedLineMeduim = 15;
    int _feedLineSmall = 13;
    int _sizeFontBig = 16;
    int _sizeFontMedium = 14;
    int _sizeFontSmalless = 10;
    int _sizeFontSmall = 12;
    string _fullNameTh = "";
    string _fullNameEn = "";
    string _facultyNameTh = "";
    string _programNameTh = "";
    string _facultyNameEn = "";
    string _programNameEn = "";
    string _projectNameEn = "";
    string _countAct = "";
    string _countHour = "";
    string _dateTh = "";
    string _dateEn = "";

    protected void Page_Load(object sender, EventArgs e)
    {
        //Login _login = new Login("student");
        //string _studentCode = _login.StudentCode;
        //_studentCode = "5915001";
        //if (_login.Authen == "true")
        //{

        //string _studentCode = Request["studentCode"];
        //_studentCode = "5915001";
        DataTable _dataList = Newtonsoft.Json.JsonConvert.DeserializeObject<System.Data.DataTable>(Request["itemList"]);
        int _row = _dataList.Rows.Count;
        int _cutStrNum = 68;
        string _studentCode = "";
        
        int _conditionReport = 0;
        string _path = Server.MapPath("~");
        Response.Charset = String.Empty;
        Response.ClearContent();
        Response.ContentType = "application/PDF";
        Document _document = new Document();
        PdfWriter _writer = PdfWriter.GetInstance(_document, Response.OutputStream);
        _document.SetPageSize(iTextSharp.text.PageSize.A4);
        _document.Open();
        PdfContentByte _cb = _writer.DirectContent;
        BaseFont _bf = BaseFont.CreateFont(_path + "\\fonts\\THSarabun.TTF", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
        BaseFont _bfBold = BaseFont.CreateFont(_path + "\\fonts\\THSarabun Bold.TTF", BaseFont.IDENTITY_H, BaseFont.EMBEDDED);
        string _checkPassAT = "";
        if (_dataList.Rows.Count > 0)
        {
            foreach (DataRow _drList in _dataList.Rows)
            {
                    _studentCode = _drList["studentCode"].ToString();
                    DataSet _ds2 = ActDB.getTransStudentPassByStudentCode(_studentCode);
                    _conditionReport = Convert.ToInt32(_studentCode.Substring(0, 2)); //  _studentCode.Substring(0, 2)
                    if (_ds2.Tables[0].Rows.Count > 0)
                    {
                        foreach (DataRow _dr in _ds2.Tables[0].Rows)
                        {
                            _checkPassAT = _dr["stsPass"].ToString();
                            // 0 ไม่ผ่าน
                            // 1 ผ่าน
                        }
                    }
                    _cb.SetColorFill(BaseColor.BLACK);
                    _cb.BeginText();

                    string _projectNameTh = "";
                    string _projectNameThLine1 = "";
                    string _projectNameThLine2 = "";
                    string _positionNameTh = "";
                    string _positionNameEn = "";
                    string _projectCode = "";

                    MasterDataInEachPage(_conditionReport, _cb, _writer, _path, _studentCode, _bfBold, _bf,"1","1");

                    _cb.SetFontAndSize(_bf, _sizeFontSmall);
                    DataSet _ds = ActDB.getActivityTranscript(_studentCode, "", "", "");
                    int _i = 1;
                    if (_conditionReport >= 62)
                    {
                        _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Coming Soon", 275, _yStartPosBody, 0);

                    }
                    else if (_conditionReport >= 60)
                    {
                        string _M = "", _A = "", _H = "", _I = "", _D = "", _O = "", _L = "";
                        string _ASum = "";
                        int _stsFirstPage = 1;
                        int _stsNoBorder = 0;
                        int kk = 0;
                        string _stsNewPageBlank = "";
                        if (_ds.Tables[0].Rows.Count > 0)
                        {

                            foreach (DataRow _dr in _ds.Tables[0].Rows)
                            {
                                //while (_i <= 26)
                                //{


                                _fullNameTh = _dr["prefixNameTh"].ToString() + _dr["firstname"].ToString() + " " + _dr["lastname"].ToString();
                                _fullNameEn = _dr["prefixNameEn"].ToString() + _dr["enFirstname"].ToString() + " " + _dr["enLastname"].ToString();

                                _projectNameTh = _dr["projectNameTh"].ToString();
                                _projectNameEn = _dr["projectNameEn"].ToString();
                                _positionNameTh = _dr["positionNameTh"].ToString();
                                _positionNameEn = _dr["positionNameEn"].ToString();
                                _projectCode = _dr["code"].ToString();
                                _M = _dr["M"].ToString();
                                _A = _dr["A"].ToString();
                                _H = _dr["H"].ToString();
                                _I = _dr["I"].ToString();
                                _D = _dr["D"].ToString();
                                _O = _dr["O"].ToString();
                                _L = _dr["L"].ToString();


                                _M = _M == "" ? "0" : _M;
                                _A = _A == "" ? "0" : _A;
                                _H = _H == "" ? "0" : _H;
                                _I = _I == "" ? "0" : _I;
                                _D = _D == "" ? "0" : _D;
                                _O = _O == "" ? "0" : _O;
                                _L = _L == "" ? "0" : _L;

                                _ASum = (Convert.ToDouble(_M) + Convert.ToDouble(_A) + Convert.ToDouble(_H) + Convert.ToDouble(_I) + Convert.ToDouble(_D) + Convert.ToDouble(_O) + Convert.ToDouble(_L)).ToString();
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectCode, 35, _yStartPosBody, 0);



                                if (_projectNameEn.Length > _cutStrNum) // 60
                                {
                                    string _strNameLastBefore = _projectNameEn.Substring(_cutStrNum - 1, 1);
                                    string _projectNameLast = _projectNameEn.Substring(_cutStrNum, 1);
                                    string _strName2Last = "";
                                    string _strName2LastBefore = "";
                                    string _strName2LastBeforable = "";
                                    string _strName4LastBefore = "";
                                    string _strName3LastBefore = "";
                                    string _strName3Before = "";
                                    if (_projectNameEn.Length >= (_cutStrNum + 2))
                                    {
                                        _strName2Last = _projectNameEn.Substring(_cutStrNum, 2);
                                        _strName2LastBefore = _projectNameEn.Substring(_cutStrNum - 1, 2);
                                        _strName2LastBeforable = _projectNameEn.Substring(_cutStrNum - 2, 2);
                                        _strName3LastBefore = _projectNameEn.Substring(_cutStrNum - 2, 3);
                                        _strName4LastBefore = _projectNameEn.Substring(_cutStrNum - 3, 4);
                                    }
                                    int _numDigitRotate = 0;

                                    _numDigitRotate = numDigitForCheckStringThai(_projectNameLast, _strName2Last, _strName2LastBefore, _strNameLastBefore, _strName4LastBefore, _strName3LastBefore, _strName2LastBeforable);


                                    _projectNameThLine1 = _projectNameEn.Substring(0, _cutStrNum + _numDigitRotate);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine1, 107, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _positionNameEn, 340, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _M, 422, _yStartPosBody, 0); // 412
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A, 437, _yStartPosBody, 0); // 427
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _H, 452, _yStartPosBody, 0); // 442
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _I, 467, _yStartPosBody, 0); // 457
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _D, 482, _yStartPosBody, 0); // 472
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _O, 497, _yStartPosBody, 0); // 487
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _L, 512, _yStartPosBody, 0); // 502
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _ASum, 546, _yStartPosBody, 0); // 543
                                    _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                                    _ylinePos = _ylinePos - 15;
                                    _projectNameThLine2 = _projectNameEn.Substring(_cutStrNum + _numDigitRotate, _projectNameEn.Length - (_cutStrNum + _numDigitRotate)); // 60
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine2, 107, _yStartPosBody, 0);

                                }
                                else
                                {
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameEn, 107, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _positionNameEn, 340, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _M, 422, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A, 437, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _H, 452, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _I, 467, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _D, 482, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _O, 497, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _L, 512, _yStartPosBody, 0);
                                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _ASum, 546, _yStartPosBody, 0);
                                }

                                _ylinePos = _ylinePos - 15;
                                _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                                kk++;
                                if (kk == _ds.Tables[0].Rows.Count)
                                {
                                    _stsNewPageBlank = "0";
                                }
                                else
                                {
                                    _stsNewPageBlank = "1";
                                }
                                if ((_yStartPosBody <= 197))//&& (_ds.Tables[0].Rows.Count >= 26))
                                {
                                    LineBorderTable(_conditionReport, _cb, _stsFirstPage.ToString(), _stsNoBorder.ToString()); // 1
                                    _yStartPos = 660; // 728
                                    _yStartPosBody = 592; // 532

                                    _ylinePos = 542; // 542

                                    _cb.EndText();
                                    _document.NewPage();
                                    _cb.BeginText();
                                    _cb.SetFontAndSize(_bfBold, _sizeFontSmall);
                                    MasterDataInEachPage(_conditionReport, _cb, _writer, _path, _studentCode, _bfBold, _bf, "0", _stsNewPageBlank);
                                    _cb.SetFontAndSize(_bf, _sizeFontSmall);
                                    _stsFirstPage++;
                                }

                            //    _i++;
                            //}
                        }
                        // ไว้ตรวจสอบว่าหน้าถัดไปถ้ามีการขึ้นเพจ แต่มีแค่ ลายเซนอย่างเดียวจะต้องไม่มีเส้นขอบ
                        if (_ylinePos == 602)
                        {
                            _stsNoBorder = 1;
                        }
                        LineBorderTable(_conditionReport, _cb, _stsFirstPage.ToString(), _stsNoBorder.ToString());
                    }


                }
                else
                {

                    string _A1 = "", _A2 = "", _A3 = "", _A4 = "";
                    string _ASum = "";
                    string _stsNewPageBlank = "";
                    int _stsFirstPage = 1;
                    int _stsNoBorder = 0;
                    int kk = 0;


                    if (_ds.Tables[0].Rows.Count > 0)
                    {

                        foreach (DataRow _dr in _ds.Tables[0].Rows)
                        {


                            _fullNameTh = _dr["prefixNameTh"].ToString() + _dr["firstname"].ToString() + " " + _dr["lastname"].ToString();
                            _fullNameEn = _dr["prefixNameEn"].ToString() + _dr["enFirstname"].ToString() + " " + _dr["enLastname"].ToString();

                            _projectNameTh = _dr["projectNameTh"].ToString();
                            _projectNameEn = _dr["projectNameEn"].ToString();
                            _positionNameTh = _dr["positionNameTh"].ToString();
                            _positionNameEn = _dr["positionNameEn"].ToString();
                            _projectCode = _dr["code"].ToString();
                            _A1 = _dr["A.1"].ToString();
                            _A2 = _dr["A.2"].ToString();
                            _A3 = _dr["A.3"].ToString();
                            _A4 = _dr["A.4"].ToString();
                            _A1 = _A1 == "" ? "0" : _A1;
                            _A2 = _A2 == "" ? "0" : _A2;
                            _A3 = _A3 == "" ? "0" : _A3;
                            _A4 = _A4 == "" ? "0" : _A4;
                            _ASum = (Convert.ToDouble(_A1) + Convert.ToDouble(_A2) + Convert.ToDouble(_A3) + Convert.ToDouble(_A4)).ToString();
                            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectCode, 33, _yStartPosBody, 0);
                            if (_projectNameEn.Length > _cutStrNum) // 60
                            {
                                string _strNameLastBefore = _projectNameEn.Substring(_cutStrNum - 1, 1);
                                string _projectNameLast = _projectNameEn.Substring(_cutStrNum, 1);
                                string _strName2Last = "";
                                string _strName2LastBefore = "";
                                string _strName2LastBeforable = "";
                                string _strName3LastBefore = "";
                                string _strName4LastBefore = "";
                                string _strName3Before = "";

                                if (_projectNameEn.Length >= (_cutStrNum + 2)) // เคยบวก 2
                                {
                                    _strName2Last = _projectNameEn.Substring(_cutStrNum, 2);
                                    _strName2LastBefore = _projectNameEn.Substring(_cutStrNum - 1, 2);
                                    _strName2LastBeforable = _projectNameEn.Substring(_cutStrNum - 2, 2);
                                    _strName3LastBefore = _projectNameEn.Substring(_cutStrNum - 2, 3);
                                    _strName4LastBefore = _projectNameEn.Substring(_cutStrNum - 3, 4);

                                }
                                int _numDigitRotate = 0;

                                _numDigitRotate = numDigitForCheckStringThai(_projectNameLast, _strName2Last, _strName2LastBefore, _strNameLastBefore, _strName4LastBefore, _strName3LastBefore, _strName2LastBeforable);

                                _projectNameThLine1 = _projectNameEn.Substring(0, _cutStrNum + _numDigitRotate);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine1, 101, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _positionNameEn, 368, _yStartPosBody, 0); // 364
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A1, 445, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A2, 465, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A3, 485, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A4, 505, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _ASum, 543, _yStartPosBody, 0);
                                _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                                _ylinePos = _ylinePos - 15;
                                _projectNameThLine2 = _projectNameEn.Substring(_cutStrNum + _numDigitRotate, _projectNameEn.Length - (_cutStrNum + _numDigitRotate)); // 60
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine2, 101, _yStartPosBody, 0);

                                //_projectNameThLine1 = _projectNameTh.Substring(0, 55); // 60
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine1, 110, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _positionNameTh, 345, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A1, 445, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A2, 465, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A3, 485, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A4, 505, _yStartPosBody, 0);
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _ASum, 543, _yStartPosBody, 0);
                                //_yStartPosBody = _yStartPosBody - _feedLineMeduim;
                                //_ylinePos = _ylinePos - 15;
                                //_projectNameThLine2 = _projectNameTh.Substring(55, _projectNameTh.Length - 55); // 60
                                //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameThLine2, 110, _yStartPosBody, 0);
                            }
                            else
                            {
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _projectNameEn, 101, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _positionNameEn, 368, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A1, 445, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A2, 465, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A3, 485, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _A4, 505, _yStartPosBody, 0);
                                _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, _ASum, 543, _yStartPosBody, 0);
                            }

                            _ylinePos = _ylinePos - 15;
                            _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                            kk++;
                            if (kk == _ds.Tables[0].Rows.Count)
                            {
                                _stsNewPageBlank = "0";
                            }
                            else
                            {
                                _stsNewPageBlank = "1";
                            }


                            if ((_yStartPosBody <= 197))//&& (_ds.Tables[0].Rows.Count >= 26))
                            {
                                LineBorderTable(_conditionReport, _cb, _stsFirstPage.ToString(), _stsNoBorder.ToString());
                                _yStartPos = 660; // 728
                                _yStartPosBody = 592; // 532
                                _ylinePos = 542; // 610  542
                                _cb.EndText();
                                _document.NewPage();
                                _cb.BeginText();
                                _cb.SetFontAndSize(_bfBold, _sizeFontSmall);
                                MasterDataInEachPage(_conditionReport, _cb, _writer, _path, _studentCode, _bfBold, _bf, "0", _stsNewPageBlank);
                                _cb.SetFontAndSize(_bf, _sizeFontSmall);
                                _stsFirstPage++;
                            }
                        }
                        // ไว้ตรวจสอบว่าหน้าถัดไปถ้ามีการขึ้นเพจ แต่มีแค่ ลายเซนอย่างเดียวจะต้องไม่มีเส้นขอบ
                        if (_ylinePos == 602)
                        {
                            _stsNoBorder = 1;
                        }
                        LineBorderTable(_conditionReport, _cb, _stsFirstPage.ToString(), _stsNoBorder.ToString()); // _stsHasNewPage.ToString()
                    }
                }

                // }
                if (_checkPassAT == "1") // ถ้าผ่านค่อยมีลายเซนต์
                {
                    string _logoMU = _path + "\\images\\SignPerson.jpg";
                    iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(_logoMU);


                    _yStartPosBody = _yStartPosBody - _feedLineSmall;
                    _yStartPosBody = _yStartPosBody - _feedLineSmall;
                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "sign...................................................", 420, _yStartPosBody, 0);
                    _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "( " + _fullNameEn + " )", 420, _yStartPosBody, 0);
                    _yStartPosBody = _yStartPosBody - _feedLineSmall;
                    _yStartPosBody = _yStartPosBody - _feedLineSmall;
                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "Issued on " + _dateEn, 420, _yStartPosBody, 0);
                    _yStartPosBody = _yStartPosBody - _feedLineBiggest;


                    _yStartPosBody = _yStartPosBody - _feedLineSmall;
                    image.ScaleAbsolute(100, 32);
                    image.SetAbsolutePosition(368, _yStartPosBody);
                    _cb.AddImage(image);
                    // _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "( รองศาสตราจารย์ นายแพทย์ปรีชา  สุนทรานันท์ )", 420, _yStartPosBody, 0);
                    _yStartPosBody = _yStartPosBody - 7;
                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "( Asst.Prof.flg.Off.Chatchai Kunavisarut )", 420, _yStartPosBody, 0);
                    _yStartPosBody = _yStartPosBody - _feedLineMeduim;
                    //_cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "รักษาการแทนรองอธิการบดีฝ่ายกิจการนักศึกษาและศิษย์เก่าสัมพันธ์", 420, _yStartPosBody, 0);
                    _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "Acting Vice President for Student Affairs and Alumni", 420, _yStartPosBody, 0);

                    _cb.Stroke();
                }

                    _cb.EndText();

                    _document.NewPage();
                    _yStartPosBody = 532; // 600
                    _feedLineBig = 19;

                    _ylinePos = 542; // 610 542

                    _yStartPos = 660; // 728
                    _xCenterPos = 290; // 302
                    _feedLineBiggest = 26;
                    _feedLineMeduim = 15;
                    _feedLineSmall = 13;
                    _sizeFontBig = 16;
                    _sizeFontMedium = 14;
                    _sizeFontSmalless = 10;
                    _sizeFontSmall = 12;
            }
        }

        _document.Close();
        Response.Write(_document);
        Response.End();
        //}
        //else
        //{
        //    Response.Write("ไม่มีสิทธิ์เข้าใช้งานระบบ");
        //}
       // string _studentCode = Request["studentCode"];
        //string _studentCode = "5613277";
        //string _studentCode = "6005249";
      

    }

     //public void FeddNewPage(int _yStartPosBody, int _row, int _conditionReport, PdfContentByte _cb, BaseFont _bfBold, BaseFont _bf, Document _document, PdfWriter _writer, string _path, string _studentCode)
     //{

     //        // start เริ่มกำหนดค่าให้ใหม่
     //        LineBorderTable(_conditionReport, _cb);
     //        _yStartPos = 728;
     //        _yStartPosBody = 600;
     //        _ylinePos = 610;
     //        _cb.EndText();
     //        _document.NewPage();
     //        _cb.BeginText();
     //        _cb.SetFontAndSize(_bfBold, _sizeFontSmall);
     //        MasterDataInEachPage(_conditionReport, _cb, _writer, _path, _studentCode, _bfBold, _bf);
     //        _cb.SetFontAndSize(_bf, _sizeFontSmall);
 
     //}


    public void MasterDataInEachPage(int _conditionReport, PdfContentByte _cb, PdfWriter _writer, string _path, string _studentCode, BaseFont _bfBold, BaseFont _bf, string _statusFirstPage,string _statusNewBlankPage) // _statusFirstPage = 1 คือเป็นหน้าแรก
    {
        //string _logoMU = _path + "\\images\\logo.png";
        //iTextSharp.text.Image image = iTextSharp.text.Image.GetInstance(_logoMU);
        //image.SetAbsolutePosition(260, 0);
        //image.ScaleAbsolute(85, 82);
        //image.Alignment = iTextSharp.text.Image.ALIGN_LEFT;
        //tp.AddImage(image);






        PdfContentByte cbhead = _writer.DirectContent;
        PdfTemplate tp = cbhead.CreateTemplate(500, 95);
        
        cbhead.AddTemplate(tp, 0, 842 - 95);


        DataSet _ds = ActDB.getListSummaryProjectByStudent(_studentCode, "", "", "","","");
        if (_ds.Tables[0].Rows.Count > 0)
        {

            foreach (DataRow _dr in _ds.Tables[0].Rows)
            {
                _fullNameTh = _dr["prefixNameTh"].ToString() + _dr["firstname"].ToString() + " " + _dr["lastname"].ToString();
                _fullNameEn = _dr["prefixNameEn"].ToString() + _dr["enFirstname"].ToString() + " " + _dr["enLastname"].ToString();

                _facultyNameTh = _dr["facultyNameTh"].ToString();
                _programNameTh = _dr["programNameTh"].ToString();
                _facultyNameEn = _dr["facultyNameEn"].ToString();
                _programNameEn = _dr["programNameEn"].ToString();
                _countAct = _dr["countAct"].ToString();
                _countHour = _dr["countHour"].ToString();
                _dateTh = _dr["dateTh"].ToString();
                _dateEn = _dr["dateEn"].ToString();
            }
        }



        _yStartPos = _yStartPos + 5; // เพิ่มมานิด
        _cb.SetFontAndSize(_bfBold, _sizeFontBig);
        _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "Mahidol University", _xCenterPos, _yStartPos, 0);
        _yStartPos = _yStartPos - 18;
        _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "Official Activity Transcript of Record", _xCenterPos, _yStartPos, 0);
        _yStartPos = _yStartPos - 18;
        _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "This Certificate is issued to certify that the individual named has been", _xCenterPos, _yStartPos, 0);
        _yStartPos = _yStartPos - 18;
        _cb.ShowTextAligned(PdfContentByte.ALIGN_CENTER, "attended the extracurricular activity of Mahidol University", _xCenterPos, _yStartPos, 0);
        _cb.SetFontAndSize(_bf, _sizeFontMedium);

        if (_statusFirstPage == "1")
        {
            _cb.SetFontAndSize(_bf, _sizeFontSmall);
            _yStartPos = _yStartPos - _feedLineBiggest;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Name : " + _fullNameEn, 50, _yStartPos, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Student ID : " + _studentCode, 365, _yStartPos, 0);

            _yStartPos = _yStartPos - _feedLineBig;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Degree : "+_facultyNameEn, 50, _yStartPos, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Major : " + _programNameEn, 365, _yStartPos, 0);
            _yStartPos = _yStartPos - _feedLineBig;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Total : " + _countAct + "  Activities , "+ _countHour + "  Hours", 50, _yStartPos, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, _countHour + " Hours", 365, _yStartPos, 0);
        }
        else
        {
            _ylinePos = _ylinePos + 60;
        }

      if (_statusNewBlankPage == "1")
        {

            _cb.SetLineWidth(0.6f);
            _cb.SetGrayStroke(0.3f);


            _cb.MoveTo(30, _ylinePos);
            _cb.LineTo(570, _ylinePos);
            _ylinePos = _ylinePos - 15;
            _cb.MoveTo(30, _ylinePos);
            _cb.LineTo(570, _ylinePos);


            _cb.SetFontAndSize(_bfBold, _sizeFontSmall);
            _yStartPos = _yStartPos - _feedLineBiggest;

  

        if (_conditionReport >= 60) // รหัสนักศึกษาที่เป็น 60
            {
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Activity Code", 45, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Extracurricular Activity", 170, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Participated as", 343, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "M", 420, _yStartPosBody, 0); // 410
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A", 435, _yStartPosBody, 0); // 425
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "H", 450, _yStartPosBody, 0); // 440
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "I", 466, _yStartPosBody, 0); // 456 
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "D", 480, _yStartPosBody, 0); // 470
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "O", 495, _yStartPosBody, 0); // 485
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "L", 510, _yStartPosBody, 0); // 500
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Credit Hrs.", 525, _yStartPosBody, 0); // 520

            }
            else
            {
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Activity Code", 45, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Extracurricular Activity", 178, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Participated as", 370, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A1", 440, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A2", 460, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A3", 480, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A4", 500, _yStartPosBody, 0);
                _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Credit Hrs.", 523, _yStartPosBody, 0);
            }
        }
        _yStartPosBody = _yStartPosBody - _feedLineBig;
    


       if (_conditionReport >= 60)
        {
            _cb.MoveTo(30, 57);
            _cb.LineTo(570, 57);
            _cb.SetFontAndSize(_bf, _sizeFontSmalless);
            int _yFooter = 50;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Mahidol University Competencies:", 50, _yFooter, 0); // 50 60
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "M", 50, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Mastery", 62, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Mastery", 70, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A", 50, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Altruism", 62, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Altruism", 70, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "H", 50, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Harmony", 62, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Harmony", 70, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "I", 50, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Integrity", 62, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Integrity", 70, _yFooter, 0);

            _yFooter = 40;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "D", 335, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Determination", 342, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Determination", 360, _yFooter, 0);

            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "O", 335, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Originality", 342, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Originality", 360, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "L", 335, _yFooter, 0);
            //_cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Leadership", 342, _yFooter, 0);
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, ":  Leadership", 360, _yFooter, 0);

        }
        else
        {
            _cb.MoveTo(30, 57);
            _cb.LineTo(570, 57);
            _cb.SetFontAndSize(_bf, _sizeFontSmalless);
            int _yFooter = 50;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "Mahidol University Competencies:", 50, _yFooter, 0); // 50  60
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A1 : Moral, ethics and volunteer", 50, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A2 : Discipline, social skill, profession, academic and transformative learning", 50, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A3 : Art and cultural, local wisdom and social value", 50, _yFooter, 0);
            _yFooter = _yFooter - 10;
            _cb.ShowTextAligned(PdfContentByte.ALIGN_LEFT, "A4 : Health promotion", 50, _yFooter, 0);
      
        }




      _cb.Stroke();

    }

    public void LineBorderTable(int _conditionReport, PdfContentByte _cb,string _statusFirstPage,string _stsNoBorder)
    {
        int _yForLine = 0;
        if (_statusFirstPage == "1")
        { 
            _yForLine = 542; // 542
        }
        else // ถ้าไม่ใช่หน้าแรก จะ 602 เพราะตัดเรื่องพวก Profile
        {
            _yForLine = 602; // 602
        }
        if (_stsNoBorder == "0")
        {
            if (_conditionReport >= 60)
            {

                _cb.MoveTo(30, _yForLine); // 610
                _cb.LineTo(30, _ylinePos - 5);
                _cb.MoveTo(415, _yForLine); // 405
                _cb.LineTo(415, _ylinePos - 5);
                _cb.MoveTo(430, _yForLine); // 420 
                _cb.LineTo(430, _ylinePos - 5);
                _cb.MoveTo(445, _yForLine); // 435 
                _cb.LineTo(445, _ylinePos - 5);
                _cb.MoveTo(460, _yForLine); // 450
                _cb.LineTo(460, _ylinePos - 5);
                _cb.MoveTo(475, _yForLine); // 465
                _cb.LineTo(475, _ylinePos - 5);
                _cb.MoveTo(490, _yForLine); // 480
                _cb.LineTo(490, _ylinePos - 5);
                _cb.MoveTo(505, _yForLine); // 495
                _cb.LineTo(505, _ylinePos - 5); // 495
                _cb.MoveTo(520, _yForLine); // 510
                _cb.LineTo(520, _ylinePos - 5); // 510
                _cb.MoveTo(570, _yForLine);
                _cb.LineTo(570, _ylinePos - 5);
                _cb.MoveTo(30, _ylinePos - 5);
                _cb.LineTo(570, _ylinePos - 5);
                _cb.Stroke();
            }
            else
            {

                _cb.MoveTo(30, _yForLine);// 610
                _cb.LineTo(30, _ylinePos - 5);
                _cb.MoveTo(435, _yForLine);
                _cb.LineTo(435, _ylinePos - 5);
                _cb.MoveTo(455, _yForLine);
                _cb.LineTo(455, _ylinePos - 5);
                _cb.MoveTo(475, _yForLine);
                _cb.LineTo(475, _ylinePos - 5);
                _cb.MoveTo(495, _yForLine);
                _cb.LineTo(495, _ylinePos - 5);
                _cb.MoveTo(515, _yForLine);
                _cb.LineTo(515, _ylinePos - 5);
                _cb.MoveTo(570, _yForLine);
                _cb.LineTo(570, _ylinePos - 5);
                _cb.MoveTo(30, _ylinePos - 5);
                _cb.LineTo(570, _ylinePos - 5);
                _cb.Stroke();
            }
        }

    }


    public int numDigitForCheckStringThai(string _strNameLast,string _strName2Last,string _strName2LastBefore,string _strNameLastBefore,string _strName4LastBefore,string _strName3LastBefore, string _strName2LastBeforable)
    {
        //_strName4LastBefore = หาภู
        int _numDigitRotate = 0;
        // สำหรับฟังก์ช่นการตัดคำภาษาไทยของโครงการที่ยาวให้สละสลวย 
        //  _strName4LastBefore ครีย

        if (
             (new string[] { "าชกุ" }).Any(x => x == _strName4LastBefore)

            )
        {
            _numDigitRotate = 5;
        }
        else if (
             (new string[] { "ิ่", "่ว" }).Any(x => x == _strName2Last)
             || (new string[] { "เรี", "สร้", "เสด" }).Any(x => x == _strName3LastBefore)
             || (new string[] { "ึก" }).Any(x => x == _strName2LastBefore)
             || (new string[] { "ุคลา", "าชกุ" , "หาภู" }).Any(x => x == _strName4LastBefore)


            )
        {
            _numDigitRotate = 3;
        }
        else if (

               (new string[] { "ุ", "่ว", "ู" }).Any(x => x == _strNameLast)
            || (new string[] { "าม", "ระ", "ึก", "ิจ", "รี", "าพ", "ัย" }).Any(x => x == _strName2Last) // , "าร"

            || (new string[] { "ช่ว", "พื่", "ใหญ", "อุด", "เจ้", "ร่ว" }).Any(x => x == _strName3LastBefore)
            || (new string[] { "ครีย" , "เฉลิ" }).Any(x => x == _strName4LastBefore)
            || (new string[] { "ุ" }).Any(x => x == _strNameLastBefore)
            //(_strName2Last == "าม") || (_strName2LastBefore == "ึก") || (_strName2Last == "ระ") || (_strName3LastBefore == "ช่ว") || (_strName2Last == "าร") || (_strName2Last == "ึก") || (_strName2Last == "ิจ")
            //|| (_strNameLast == "ุ") || (_strName3LastBefore == "255")




            )
        {
            _numDigitRotate = 2;
        }
        else if ((new string[] { "ญจนบ", "ิทยา" }).Any(x => x == _strName4LastBefore)
          )
        {
            _numDigitRotate = 4;
        }

        else if ( (new string[] { "าร" }).Any(x => x == _strName2Last)
            || (new string[] { "กันย" }).Any(x => x == _strName4LastBefore)
            || (new string[] { "ุง" }).Any(x => x == _strName2LastBefore)

            ) 
        {
            _numDigitRotate = -3;
        }
        else if ((new string[] { "เ", "โ", "ไ", "ใ", "แ" }).Any(x => x == _strNameLastBefore)
             || (new string[] { "25","ma", "วิ","อา", "น้" }).Any(x => x == _strName2LastBefore)
             || (new string[] { "หิ", "้ำ", "ปร" }).Any(x => x == _strName2Last)
             || (new string[] { "ทพรั" }).Any(x => x == _strName4LastBefore)

             )

        {
            _numDigitRotate = -1;
        }
        else if ((new string[] { "25" ,"โน"}).Any(x => x == _strName2LastBeforable) 
             || (new string[] { "ร็" }).Any(x => x == _strName2Last)
             || (new string[] { "ิจ" }).Any(x => x == _strName2LastBefore)

    

            )
        {
            _numDigitRotate = -2;
        }
        else if ((new string[] { "มัคร"}).Any(x => x == _strName4LastBefore)
            || (new string[] {  "มิ" }).Any(x => x == _strName2LastBeforable)
            )
        {
            _numDigitRotate = -4;
        }
        else if ((new string[] {  "ษา 2" }).Any(x => x == _strName4LastBefore)
           )
        {
            _numDigitRotate = -6;
        }
        //else if ((_strNameLast == "ำ") || (_strNameLast == "่") || (_strNameLast == "ี") || (_strNameLast == "ุ") || (_strNameLast == "ึ") || (_strNameLast == "็")
        // || (_strNameLast == "๊") || (_strNameLast == "ั") || (_strNameLast == "ิ") || (_strNameLast == "์") || (_strNameLast == " ") || (_strNameLast == "ไ") 
        // || (_strNameLast == "ใ") || (_strNameLast == "า") || (_strNameLast == "๋") || (_strName2LastBefore == "ิด") || (_strName4LastBefore=="แปลง") || (_strName3LastBefore == "การ") || (_strName2LastBefore =="25") || (_strName3LastBefore == "ญจน") )
        //{
        else if (((new string[] { "ำ", "่", "ี", "ุ", "ึ", "็", "๊", "ั", "ิ", "์", " ", "า", "๋", "ะ" }).Any(x => x == _strNameLast)) 
              || (new string[] { "ิด","25" }).Any(x => x == _strName2LastBefore) //  เคส 25
              || (new string[] { "การ", "ญจน", "มรม" }).Any(x => x == _strName3LastBefore)
              || (new string[] { "แปลง", "2561","2560", "2559", "2558", "2557", "หิดล" , "ะชนม" }).Any(x => x == _strName4LastBefore)
              || (new string[] { "ิ", "า","ั","็","๊" }).Any(x => x == _strNameLastBefore) 
              || (new string[] { "ดล" }).Any(x => x == _strNameLastBefore + _strNameLast) )
            


        {
            _numDigitRotate = 1; 
        }
        else //            || (new string[] {"ไ", "ใ" }).Any(x => x == _strNameLast)
        {
            _numDigitRotate = 0;
        }

        return _numDigitRotate;


    }





    




}